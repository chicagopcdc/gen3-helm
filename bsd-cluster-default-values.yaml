global:
  dev: false
  hostname: localhost
  portal_app: gitops
  dictionaryUrl: https://pcdc-gen3-dictionaries.s3.amazonaws.com/pcdc-schema-demo-amia.json
  authz_entity_name: "subject"
  postgres:
    dbCreate: true
    master:
      # -- global postgres master username
      username: postgres
      # -- global postgres master password
      password: "XpCCD4uXpEUiE1qD"
      # -- global postgres master host
      host: "gen3-postgresql.gen3.svc.cluster.local"
      # -- global postgres master port
      port: "5432"
  tls:
    cert: |
      -----BEGIN CERTIFICATE-----
      MIIDDTCCAfWgAwIBAgIQcMmHCSPIuchREDNi1OpQ5DANBgkqhkiG9w0BAQsFADAP
      MQ0wCwYDVQQDEwRnZW4zMB4XDTI0MDMyNTIyMDgwNFoXDTI1MDMyNTIyMDgwNFow
      FDESMBAGA1UEAxMJbG9jYWxob3N0MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIB
      CgKCAQEAoTT4Y1GJ5aTwA8emKdCiPL9RCOIALYygX9lmpQ6loSE5rS4u6bgbztSg
      9EV5mvV+oNA1g473rgwyjNlJEIQJvEO323okDjXI47j09N5a9aGhRc0bhfGlwmt/
      gE6NZUuI/u9wjIh8nLysh4rOYrN2+Us9WRfBL8wjmRZWNFRygrEMB9lHzPefEQoU
      p4BcOh4oLbu8//x3Of5fwDMitL5gQtSmZFnLMbK0HD7CJWNz9DQA1n9e8rRg5KWA
      N7Tu6MIaY/H/DVCL3LfswIBSF6eQ73umGHf1zhS7PLSHPxYxkEeg35KKriN+7492
      38Ra3bi0CzTey0It+EK+zjtt1fd7XQIDAQABo2AwXjAOBgNVHQ8BAf8EBAMCBaAw
      HQYDVR0lBBYwFAYIKwYBBQUHAwEGCCsGAQUFBwMCMAwGA1UdEwEB/wQCMAAwHwYD
      VR0jBBgwFoAUIK7MtOCIs/DygzZ1/vR3ieAwplAwDQYJKoZIhvcNAQELBQADggEB
      AIWgFxpLfZ9LUc90qdiC2yHaLKyTN/LMdkUjw82ULVLYJ0ot0JJaJvO4iDFe/Ra9
      t13LUhcE+W4ChentUHvwYKO5zghf4UtiryM8/wqmcZ03xyswdVaKuk5Ov39/9sTJ
      6rfzMpf3mJZDO6JYC475TCQQ3hKAUUzOiFg41CMeqAy9vn0zgBk58IzZmruvdn43
      YH6N/ooqVTj3CnkmVkWoB4zBjDzX9DuxpYvqI3seD7qLtXK2cm2X+Pqv90UoPsB/
      XegALjODFpTbN5Scvbpb3npXEKbvR7X9+xy7BbVYD2K0FQ9+S1UTU8Rz7Dh9SDHM
      Ixy5W9o6gVFhB5mxceOxKNc=
      -----END CERTIFICATE-----
    key: |
      -----BEGIN RSA PRIVATE KEY-----
      MIIEogIBAAKCAQEAoTT4Y1GJ5aTwA8emKdCiPL9RCOIALYygX9lmpQ6loSE5rS4u
      6bgbztSg9EV5mvV+oNA1g473rgwyjNlJEIQJvEO323okDjXI47j09N5a9aGhRc0b
      hfGlwmt/gE6NZUuI/u9wjIh8nLysh4rOYrN2+Us9WRfBL8wjmRZWNFRygrEMB9lH
      zPefEQoUp4BcOh4oLbu8//x3Of5fwDMitL5gQtSmZFnLMbK0HD7CJWNz9DQA1n9e
      8rRg5KWAN7Tu6MIaY/H/DVCL3LfswIBSF6eQ73umGHf1zhS7PLSHPxYxkEeg35KK
      riN+749238Ra3bi0CzTey0It+EK+zjtt1fd7XQIDAQABAoIBAG+AhfWcZncSuHjE
      1SfDCRRfeBtexqS6ygrCAn9UPDfRFWW1tfkuwP00kQekLlKCT03H9dvDPYmDIkvN
      1v23dkxjwn3qY5n4lbT9L2FXky6m1zfCgLEKzY5GcHA85QwVTPKYhw6NMTPwRJ2T
      4uDeJQKVih9fkN4Qoua2TnXvmyzNU49ffgFMJ0Ec7vNmS7MCUtlGec1Y0xKgTflt
      yqhChpG2MBxdX8tLNgSC+lgRBZSzRaP/0oGZuV3FQ7W4fuXLNN8CdhSzHbVlbK+D
      CO1f6nqZ8PZKJ/7SGwB2Q05EqscNAF3tl1dsGpnLqOLpnqJ2+f/H4W6/uB2tAILd
      ySaC53kCgYEAwOHrNulo7HLgSXEs4/Ta9nLPoZxpDxkNKCRENDJCsoakQ2O33aL4
      mrHdSmxGqecpoCvkifx/ZCN073ZykVIoSY70+N7f79EytGjkAzDxEAnYMKSU7SSJ
      TGA+c8Juqh6uvbMuJy/ZiQE6DZsweqhxopov7xSd89RIvNaBZdXq3QcCgYEA1fWJ
      VHCEeQGl6eMtSWOfiADUnmOG70xlvmpzlD18pTTCIF7V1rFaAXjJl0ldI3mASJy/
      usiHZq54bUWcvof8DjI7YJ0OS8e7pmUZK9+O9fGTLIf8TIz6qq0PfERk+SyWGdAo
      Z8HQMJBKWX809KPkJ9isd62wfREHVazfljxdL3sCgYBwxKTsWdKKSy9uQMjqDcHm
      zIEwD24s8YyLp4hoq+nqzmVDMQ3SevG2H78tP9ighRIFHyRiuEkSlthLGIkrBUmg
      mAAJcOSkJT7r01dbtkV6BwdqiQ65Bt9u0+Yvb8GbnIy1RAj7yDH6s8jpI45YaBrn
      4hWcRgWDBN3x6ceFbmf+CQKBgA5vwNJnvSiFCfLcF0Qqaqs8kxwUzxf6aasNd7r6
      4xwqkSap/3e7A72xrrh8hMJOAm/j07QAr9In14xX9BmPB1zV2tfMARjv4yN5Ete4
      /+ZsZGfOzSFFKey2PKM/4ihF7+LR/sfxdeCw+7NKOAKBxHVD029H0u69ZWdMgNGc
      RRVdAoGAFH7huA61ylOGh/W6IMU0wvJqg9SeT53JoZTr++0MS+0sdYoRGrq4RzSZ
      bXKuvqZaSrXMRB9JZ72FfpjwZhDPZtNOXJV00K4yjZIui6h+TPsDk4lnxVSPYMpP
      My/zrtJTCPM+Gqa6mhYTz4fyITv7igxqyECakrCa/Ct0SVDZbSI=
      -----END RSA PRIVATE KEY-----



fence:
  # env:
  #   - name: GEN3_UWSGI_TIMEOUT
  #     valueFrom:
  #       configMapKeyRef:
  #         name: manifest-global
  #         key: uwsgi-timeout
  #         optional: true
  #   - name: DD_AGENT_HOST
  #     valueFrom:
  #       fieldRef:
  #         fieldPath: status.hostIP
  #   - name: AWS_STS_REGIONAL_ENDPOINTS
  #     value: regional
  #   - name: PYTHONPATH
  #     value: /var/www/fence
  #   - name: GEN3_DEBUG
  #     value: "False"
  #   - name: FENCE_PUBLIC_CONFIG
  #     valueFrom:
  #       configMapKeyRef:
  #         name: manifest-fence
  #         key: fence-config-public.yaml
  #         optional: true
  #   - name: PGHOST
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: host
  #         optional: false
  #   - name: PGUSER
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: username
  #         optional: false
  #   - name: PGPASSWORD
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: password
  #         optional: false
  #   - name: PGDB
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: database
  #         optional: false
  #   - name: DBREADY
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: dbcreated
  #         optional: true
  #   - name: DB
  #     value: postgresql://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/$(PGDB)
  #   - name: gen3Env
  #     valueFrom:
  #       configMapKeyRef:
  #         name: manifest-global
  #         key: hostname
  # initEnv:
  #   - name: PGHOST
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: host
  #         optional: false
  #   - name: PGUSER
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: username
  #         optional: false
  #   - name: PGPASSWORD
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: password
  #         optional: false
  #   - name: PGDB
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: database
  #         optional: false
  #   - name: DBREADY
  #     valueFrom:
  #       secretKeyRef:
  #         name: fence-dbcreds
  #         key: dbcreated
  #         optional: true
  #   - name: DB
  #     value: postgresql://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/$(PGDB)
  #   - name: FENCE_DB
  #     value: postgresql://$(PGUSER):$(PGPASSWORD)@$(PGHOST):5432/$(PGDB)
  #   - name: PYTHONPATH
  #     value: /var/www/fence
  #   - name: FENCE_PUBLIC_CONFIG
  #     valueFrom:
  #       configMapKeyRef:
  #         name: manifest-fence
  #         key: fence-config-public.yaml
  #         optional: true
  # postgres:
  #   # (bool) Whether the database should be restored from s3. Default to global.postgres.dbRestore
  #   dbRestore: false
  #   # -- (bool) Whether the database should be created. Default to global.postgres.dbCreate
  #   dbCreate: false
  #   # -- (string) Hostname for postgres server. This is a service override, defaults to global.postgres.host
  #   host: "gen3-postgresql.gen3.svc.cluster.local"
  #   # -- (string) Database name for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  #   database: "fence-gen3"
  #   # -- (string) Username for postgres. This is a service override, defaults to <serviceName>-<releaseName>
  #   username: "fence-gen3"
  #   # -- (string) Port for Postgres.
  #   port: "5432"
  #   # -- (string) Password for Postgres. Will be autogenerated if left empty.
  #   password: "s8jdqPBeoIeyn6nT"
  #   # -- (string) Will create a Database for the individual service to help with developing it.
  #   separate: false
  FENCE_CONFIG:
    DEBUG: true
    MOCK_STORAGE: true
    #fill in
    AMANUENSIS_PUBLIC_KEY_PATH: '/fence/keys/key/jwt_public_key.pem'
    MOCK_GOOGLE_AUTH: true
    mock_default_user: 'test@example.com'
    
    
  image:
    repository: quay.io/pcdc/fence
    tag: "helm-test"
    pullPolicy: Always
  USER_YAML: |
    cloud_providers: {}
    groups: {}
    authz:
      # policies automatically given to anyone, even if they haven't authenticated
      anonymous_policies: ['open_data_reader', 'full_open_access']

      # policies automatically given to authenticated users (in addition to their other
      # policies)
      all_users_policies: ['open_data_reader', 'authn_open_access']

      user_project_to_resource:
        QA: /programs/QA
        DEV: /programs/DEV
        test: /programs/QA/projects/test
        jenkins: /programs/jnkns/projects/jenkins
        jenkins2: /programs/jnkns/projects/jenkins2
        jnkns: /programs/jnkns

      policies:
        # GEARBOX
        - id: gearbox_admin
          resource_paths: ['/gearbox_gateway']
          role_ids: ['gearbox_user']
        # General Access
        - id: 'workspace'
          description: 'be able to use workspace'
          resource_paths: ['/workspace']
          role_ids: ['workspace_user']
        - id: 'dashboard'
          description: 'be able to use the commons dashboard'
          resource_paths: ['/dashboard']
          role_ids: ['dashboard_user']
        - id: 'prometheus'
          description: 'be able to use prometheus'
          resource_paths: ['/prometheus']
          role_ids: ['prometheus_user']
        - id: 'ttyadmin'
          description: 'be able to use the admin tty'
          resource_paths: ['/ttyadmin']
          role_ids: ['ttyadmin_user']
        - id: 'mds_admin'
          description: 'be able to use metadata service'
          resource_paths: ['/mds_gateway']
          role_ids: ['mds_user']
        - id: 'data_upload'
          description: 'upload raw data files to S3'
          role_ids: ['file_uploader']
          resource_paths: ['/data_file']
        - description: be able to use sower job
          id: sower
          resource_paths: [/sower]
          role_ids: [sower_user]
        - id: 'mariner_admin'
          description: 'full access to mariner API'
          resource_paths: ['/mariner']
          role_ids: ['mariner_admin']
        - id: audit_reader
          role_ids:
          - audit_reader
          resource_paths:
          - /services/audit
        - id: audit_login_reader
          role_ids:
          - audit_reader
          resource_paths:
          - /services/audit/login
        - id: audit_presigned_url_reader
          role_ids:
          - audit_reader
          resource_paths:
          - /services/audit/presigned_url
        - id: requestor_admin
          role_ids:
          - requestor_admin
          resource_paths:
          - /programs
        - id: requestor_reader
          role_ids:
          - requestor_reader
          resource_paths:
          - /programs
        - id: requestor_creator
          role_ids:
          - requestor_creator
          resource_paths:
          - /programs
        - id: requestor_updater
          role_ids:
          - requestor_updater
          resource_paths:
          - /programs
        - id: requestor_deleter
          role_ids:
          - requestor_deleter
          resource_paths:
          - /programs
        # Data Access

        # All programs policy
        - id: 'all_programs_reader'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths: ['/programs']

        # # example if need access to write to storage
        # - id: 'programs.jnkns-storage_writer'
        #   description: ''
        #   role_ids:
        #     - 'storage_writer'
        #   resource_paths: ['/programs/jnkns']

        - id: 'programs.jnkns-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/programs/jnkns'
            - '/gen3/programs/jnkns'

        - id: 'programs.jnkns-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/programs/jnkns'
            - '/gen3/programs/jnkns'


        - id: 'programs.QA-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/programs/QA'
            - '/gen3/programs/QA'

        - id: 'programs.QA-admin-no-storage'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
          resource_paths:
            - '/programs/QA'
            - '/gen3/programs/QA'

        - id: 'programs.QA-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/programs/QA'
            - '/gen3/programs/QA'

        - id: 'programs.DEV-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
            - 'storage_writer'
          resource_paths:
            - '/programs/DEV'
            - '/gen3/programs/DEV'

        - id: 'programs.DEV-storage_writer'
          description: ''
          role_ids:
            - 'storage_writer'
          resource_paths: ['/programs/DEV']

        - id: 'programs.DEV-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/programs/DEV'
            - '/gen3/programs/DEV'

        - id: 'programs.test-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/programs/test'
            - '/gen3/programs/test'

        - id: 'programs.test-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/programs/test'
            - '/gen3/programs/test'

        - id: 'abc-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/abc'

        - id: 'gen3-admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/gen3'

        - id: 'gen3-hmb-researcher'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_reader'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'
            - '/consents/HMB'
            - '/gen3'

        - id: 'abc.programs.test_program.projects.test_project1-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/abc/programs/test_program/projects/test_project1'

        - id: 'abc.programs.test_program.projects.test_project2-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/abc/programs/test_program/projects/test_project2'

        - id: 'abc.programs.test_program2.projects.test_project3-viewer'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths:
            - '/abc/programs/test_program2/projects/test_project3'

        # Open data policies
        - id: 'authn_open_access'
          resource_paths: ['/programs/open/projects/authnRequired']
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
        - id: 'full_open_access'
          resource_paths: ['/programs/open/projects/1000G']
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
        - id: 'open_data_reader'
          description: ''
          role_ids:
            - 'reader'
            - 'storage_reader'
          resource_paths: ['/open']
        - id: 'open_data_admin'
          description: ''
          role_ids:
            - 'creator'
            - 'reader'
            - 'updater'
            - 'deleter'
            - 'storage_writer'
            - 'storage_reader'
          resource_paths: ['/open']

        # Consent Code Policies
        - id: 'not-for-profit-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NPU'

        - id: 'publication-required-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/PUB'

        - id: 'gru-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'

        - id: 'gru-cc-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'

        - id: 'hmb-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'
            - '/consents/HMB'

        - id: 'poa-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'
            - '/consents/POA'

        - id: 'ds-lung-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'
            - '/consents/HMB'
            - '/consents/DS_LungDisease'

        - id: 'ds-chronic-obstructive-pulmonary-disease-researcher'
          description: ''
          role_ids:
            - 'admin'
          resource_paths:
            - '/consents/NRES'
            - '/consents/GRU'
            - '/consents/GRU_CC'
            - '/consents/HMB'
            - '/consents/DS_ChronicObstructivePulmonaryDisease'

        - id: 'services.sheepdog-admin'
          description: 'CRUD access to programs and projects'
          role_ids:
            - 'sheepdog_admin'
          resource_paths:
            - '/services/sheepdog/submission/program'
            - '/services/sheepdog/submission/project'

        # indexd
        - id: 'indexd_admin'
          description: 'full access to indexd API'
          role_ids:
            - 'indexd_admin'
          resource_paths:
            - '/programs'
            - '/services/indexd/admin'
        # # TODO resource path '/' is not valid right now in arborist, trying to decide
        # #      how to handle all resources
        # - id: 'indexd_admin'
        #   description: ''
        #   role_ids:
        #     - 'indexd_record_creator'
        #     - 'indexd_record_reader'
        #     - 'indexd_record_updater'
        #     - 'indexd_delete_record'
        #     - 'indexd_storage_reader'
        #     - 'indexd_storage_writer'
        #   resource_paths: ['/']
        # - id: 'indexd_record_reader'
        #   description: ''
        #   role_ids:
        #     - 'indexd_record_reader'
        #   resource_paths: ['/']
        # - id: 'indexd_record_editor'
        #   description: ''
        #   role_ids:
        #     - 'indexd_record_creator'
        #     - 'indexd_record_reader'
        #     - 'indexd_record_updater'
        #     - 'indexd_delete_record'
        #   resource_paths: ['/']
        # - id: 'indexd_storage_reader'
        #   description: ''
        #   role_ids:
        #     - 'indexd_storage_reader'
        #   resource_paths: ['/']
        # - id: 'indexd_storage_editor'
        #   description: ''
        #   role_ids:
        #     - 'indexd_storage_reader'
        #     - 'indexd_storage_writer'
        #   resource_paths: ['/']

        # argo
        - id: argo
          description: be able to use argo
          resource_paths: [/argo]
          role_ids: [argo_user]
        
        #PCDC specific
        - id: 'services.amanuensis-admin'
          description: 'admin access to amanuensis'
          role_ids:
            - 'amanuensis_admin'
          resource_paths:
            - '/services/amanuensis'
        - id: analysis
          description: be able to use analysis tool service
          resource_paths: 
          - /analysis
          role_ids: 
          - analysis_user
        - id: privacy_policy
          description:  User agreed on the privacy policy
          resource_paths:
            - /privacy
          role_ids:
            - reader
        - id: login_no_access
          role_ids:
          - reader
          resource_paths:
          - /portal
        - id: 'data_admin'
          description: 'policy test, should write a policy per resource and assign to user in order to avoid duplicating policies'
          role_ids:
            - admin
          resource_paths:
            - /programs
            - /programs/pcdc
      resources:
        #GEARBOX
        - name: 'portal'
          description: 'data portal service'
        - name: 'gearbox_gateway'
        # General Access
        - name: 'data_file'
          description: 'data files, stored in S3'
        - name: 'dashboard'
          description: 'commons /dashboard'
        - name: 'mds_gateway'
          description: 'commons /mds-admin'
        - name: 'prometheus'
          description: 'commons /prometheus and /grafana'
        - name: 'ttyadmin'
          description: 'commons /ttyadmin'
        - name: 'workspace'
          description: jupyter notebooks
        - name: "sower"
          description: 'sower resource'
        - name: 'mariner'
          description: 'workflow execution service'
        - name: argo
        #PCDC
        - name: analysis
          description: analysis tool service
        - name: portal
          description: data portal service
        - name: privacy
          description: User privacy policy
        # OLD Data
        - name: 'programs'
          subresources:
            #PCDC
            - name: pcdc
            - name: 'open'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: '1000G'
                    - name: 'authnRequired'
            - name: 'QA'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: 'test'
            - name: 'DEV'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: 'test'
            - name: 'jnkns'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: 'jenkins'
                    - name: 'jenkins2'
            - name: 'test'
              subresources:
                - name: 'projects'
                  subresources:
                    - name: 'test'

        # NEW Data WITH PREFIX
        - name: 'gen3'
          subresources:
            - name: 'programs'
              subresources:
                - name: 'QA'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'test'
                - name: 'DEV'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'test'
                - name: 'jnkns'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'jenkins'
                        - name: 'jenkins2'
                - name: 'test'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'test'

        # consents obtained from DUO and NIH
        # https://github.com/EBISPOT/DUO
        # https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4721915/
        - name: 'consents'
          subresources:
            - name: 'NRES'
              description: 'no restriction'
            - name: 'GRU'
              description: 'general research use'
            - name: 'GRU_CC'
              description: 'general research use and clinical care'
            - name: 'HMB'
              description: 'health/medical/biomedical research'
            - name: 'POA'
              description: 'population origins or ancestry research'
            - name: 'NMDS'
              description: 'no general methods research'
            - name: 'NPU'
              description: 'not-for-profit use only'
            - name: 'PUB'
              description: 'publication required'
            - name: 'DS_LungDisease'
              description: 'disease-specific research for lung disease'
            - name: 'DS_ChronicObstructivePulmonaryDisease'
              description: 'disease-specific research for chronic obstructive pulmonary disease'

        - name: 'abc'
          subresources:
            - name: 'programs'
              subresources:
                - name: 'foo'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'bar'
                - name: 'test_program'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'test_project1'
                        - name: 'test_project2'
                - name: 'test_program2'
                  subresources:
                    - name: 'projects'
                      subresources:
                        - name: 'test_project3'


        # "Sheepdog admin" resources
        - name: 'services'
          subresources:
            - name: 'sheepdog'
              subresources:
                - name: 'submission'
                  subresources:
                    - name: 'program'
                    - name: 'project'
            #PCDC
            - name: 'amanuensis'
            - name: 'indexd'
              subresources:
                - name: 'admin'
                - name: 'bundles'
            - name: audit
              subresources:
                - name: presigned_url
                - name: login

        - name: 'open'

      # action/methods:
      #     create, read, update, delete, read-storage, write-storage,
      #     file_upload, access
      roles:
        #GEARBOX
        - id: 'gearbox_user'
          permissions:
            - id: 'gearbox_access'
              action:
                service: '*'
                method: '*'
        # General Access
        - id: 'file_uploader'
          description: 'can upload data files'
          permissions:
            - id: 'file_upload'
              action:
                service: '*'
                method: 'file_upload'
        - id: 'workspace_user'
          permissions:
            - id: 'workspace_access'
              action:
                service: 'jupyterhub'
                method: 'access'
        - id: 'dashboard_user'
          permissions:
            - id: 'dashboard_access'
              action:
                service: 'dashboard'
                method: 'access'
        - id: 'mds_user'
          permissions:
            - id: 'mds_access'
              action:
                service: 'mds_gateway'
                method: 'access'
        - id: 'prometheus_user'
          permissions:
            - id: 'prometheus_access'
              action:
                service: 'prometheus'
                method: 'access'
        - id: 'ttyadmin_user'
          permissions:
            - id: 'ttyadmin_access'
              action:
                service: 'ttyadmin'
                method: 'access'
        - id: 'sower_user'
          permissions:
            - id: 'sower_access'
              action:
                service: 'job'
                method: 'access'
        - id: 'mariner_admin'
          permissions:
            - id: 'mariner_access'
              action:
                service: 'mariner'
                method: 'access'
        - id: 'audit_reader'
          permissions:
            - id: 'audit_reader_action'
              action:
                service: 'audit'
                method: 'read'
        - id: 'analysis_user'
          permissions:
          - action: {method: 'access', service: 'analysis'}
            id: 'analysis_access'
        # All services
        - id: 'admin'
          description: ''
          permissions:
            - id: 'admin'
              action:
                service: '*'
                method: '*'
        - id: 'creator'
          description: ''
          permissions:
            - id: 'creator'
              action:
                service: '*'
                method: 'create'
        - id: 'reader'
          description: ''
          permissions:
            - id: 'reader'
              action:
                service: '*'
                method: 'read'
        - id: 'updater'
          description: ''
          permissions:
            - id: 'updater'
              action:
                service: '*'
                method: 'update'
        - id: 'deleter'
          description: ''
          permissions:
            - id: 'deleter'
              action:
                service: '*'
                method: 'delete'
        - id: 'storage_writer'
          description: ''
          permissions:
            - id: 'storage_writer'
              action:
                service: '*'
                method: 'write-storage'
        - id: 'storage_reader'
          description: ''
          permissions:
            - id: 'storage_reader'
              action:
                service: '*'
                method: 'read-storage'


        # Sheepdog admin role
        - id: 'sheepdog_admin'
          description: 'sheepdog admin role for program project crud'
          permissions:
            - id: 'sheepdog_admin_action'
              action:
                service: 'sheepdog'
                method: '*'


        # indexd
        - id: 'indexd_admin'
          # this only works if indexd.arborist is enabled in manifest!
          description: 'full access to indexd API'
          permissions:
            - id: 'indexd_admin'
              action:
                service: 'indexd'
                method: '*'
        - id: 'indexd_record_creator'
          description: ''
          permissions:
            - id: 'indexd_record_creator'
              action:
                service: 'indexd'
                method: 'create'
        - id: 'indexd_record_reader'
          description: ''
          permissions:
            - id: 'indexd_record_reader'
              action:
                service: 'indexd'
                method: 'read'
        - id: 'indexd_record_updater'
          description: ''
          permissions:
            - id: 'indexd_record_updater'
              action:
                service: 'indexd'
                method: 'update'
        - id: 'indexd_delete_record'
          description: ''
          permissions:
            - id: 'indexd_delete_record'
              action:
                service: 'indexd'
                method: 'delete'
        - id: 'indexd_storage_reader'
          description: ''
          permissions:
            - id: 'indexd_storage_reader'
              action:
                service: 'indexd'
                method: 'read-storage'
        - id: 'indexd_storage_writer'
          description: ''
          permissions:
            - id: 'indexd_storage_writer'
              action:
                service: 'indexd'
                method: 'write-storage'

        # arborist
        - id: 'arborist_creator'
          description: ''
          permissions:
            - id: 'arborist_creator'
              action:
                service: 'arborist'
                method: 'create'
        - id: 'arborist_reader'
          description: ''
          permissions:
            - id: 'arborist_reader'
              action:
                service: 'arborist'
                method: 'read'
        - id: 'arborist_updater'
          description: ''
          permissions:
            - id: 'arborist_updater'
              action:
                service: 'arborist'
                method: 'update'
        - id: 'arborist_deleter'
          description: ''
          permissions:
            - id: 'arborist_deleter'
              action:
                service: 'arborist'
                method: 'delete'

        # requestor
        - id: requestor_admin
          permissions:
          - id: requestor_admin_action
            action:
              service: requestor
              method: '*'
        - id: requestor_reader
          permissions:
          - id: requestor_reader_action
            action:
              service: requestor
              method: read
        - id: requestor_creator
          permissions:
          - id: requestor_creator_action
            action:
              service: requestor
              method: create
        - id: requestor_updater
          permissions:
          - id: requestor_updater_action
            action:
              service: requestor
              method: update
        - id: requestor_deleter
          permissions:
          - id: requestor_deleter_action
            action:
              service: requestor
              method: delete
        # argo
        - id: argo_user
          permissions:
            - id: argo_access
              action:
                service: argo
                method: access
        #PCDC specific
        #amanuensis
        - id: 'amanuensis_admin'
          description: 'can do admin work on project/data request'
          permissions:
            - id: 'amanuensis_admin_action'
              action: 
                service: 'amanuensis'
                method: '*'
    clients:
      basic-test-client:
        policies:
        - abc-admin
        - gen3-admin
      basic-test-abc-client:
        policies:
        - abc-admin
      wts:
        policies:
        - all_programs_reader
        - workspace

    users:
      ### BEGIN INTERNS SECTION ###
      ### END INTERNS SECTION ###
      qureshi@uchicago.edu:
        admin: true
        policies:
          - data_upload
          - workspace
          - dashboard
          - mds_admin
          - prometheus
          - sower
          - services.sheepdog-admin
          - programs.QA-admin
          - programs.test-admin
          - programs.DEV-admin
          - programs.jnkns-admin
          - indexd_admin
          - ttyadmin
        projects:
          - auth_id: QA
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: test
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: DEV
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins2
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jnkns
            privilege: [create, read, update, delete, upload, read-storage] 
      pmurdoch@uchicago.edu:
        admin: true
        policies:
          - gearbox_admin
          - data_upload
          - workspace
          - dashboard
          - mds_admin
          - prometheus
          - sower
          - services.sheepdog-admin
          - services.amanuensis-admin
          - programs.QA-admin
          - programs.test-admin
          - programs.DEV-admin
          - programs.jnkns-admin
          - indexd_admin
          - ttyadmin
          - data_admin
          - analysis
          - privacy_policy
        projects:
          - auth_id: QA
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: test
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: DEV
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins2
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jnkns
            privilege: [create, read, update, delete, upload, read-storage]
      graglia01@gmail.com:
        admin: true
        policies:
          - data_upload
          - workspace
          - dashboard
          - mds_admin
          - prometheus
          - sower
          - services.sheepdog-admin
          - services.amanuensis-admin
          - programs.QA-admin
          - programs.test-admin
          - programs.DEV-admin
          - programs.jnkns-admin
          - indexd_admin
          - ttyadmin
          - data_admin
          - analysis
          - privacy_policy
          - login_no_access
        projects:
          - auth_id: QA
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: test
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: DEV
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jenkins2
            privilege: [create, read, update, delete, upload, read-storage]
          - auth_id: jnkns
            privilege: [create, read, update, delete, upload, read-storage]


portal:
  enabled: false
  image: 
    repository: quay.io/pcdc/gearbox_fe
    tag: "dev"
  resources:
    requests:
      cpu: 1.0
  gitops: 
    json: |
      {
        "s3_bucket": "https://test-compose-gearbox-data-bucket-with-versioning.s3.amazonaws.com"
      }
  
  gearboxS3Bucket: "https://test-compose-gearbox-data-bucket-with-versioning.s3.amazonaws.com"

arborist:
  enabled: false
  image: 
    repository: quay.io/cdis/arborist
    tag: 2024.03


revproxy:
  enabled: false
  image:
    repository: quay.io/cdis/nginx
    tag: 2023.09

gearbox:
  enabled: false
  image:
    repository: quay.io/pcdc/gearbox_be
    tag: 1.3.0
    pullPolicy: Always

gearbox-middleware:
  enabled: false
  image:
    repository: quay.io/pcdc/gearbox-middleware
    tag: "helm-test"
    pullPolicy: Always

########################################################################################
#                               DISABLED SERVICES                                      #
########################################################################################
elasticsearch:
  enabled: false

amanuensis:
  enabled: false

guppy:
  enabled: false

manifestservice:
  enabled: false

pcdcanalysistools:
  enabled: false

peregrine:
  enabled: false

sheepdog:
  enabled: false

sower:
  enabled: false

wts:
  enabled: false

ambassador:
  # -- (bool) Whether to deploy the ambassador subchart.
  enabled: false

argo-wrapper:
  # -- (bool) Whether to deploy the argo-wrapper subchart.
  enabled: false

audit:
  # -- (bool) Whether to deploy the audit subchart.
  enabled: false

aws-es-proxy:
  enabled: false

metadata:
  # -- (bool) Whether to deploy the metadata subchart.
  enabled: false

pidgin:
  # -- (bool) Whether to deploy the pidgin subchart.
  enabled: false

indexd:
  enabled: false

hatchery:
  enabled: false